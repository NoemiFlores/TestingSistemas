Capítulo 3 - PROCESO DE EJECUCIÓN DE PRUEBA
-Modelo ERA
	Estabilizacion: Ejecutamos el 100% de los casos de prueba.
	Si se alcanza menos del 80% se vuelve a iniciar el ciclo de
	estabilización
	Regresión: Cuando se alcanza mas del 80% en el ciclo de
	estabilización se inicia el ciclo de regresión 
	Aceptación: Si se alcanza el 100% del 20% se inicial la etapa
	de aceptación, que es el 100% de los casos de prueba de aceptación
	después se pasa UAT (pruebas de aceptación de usuario)		
-Pre-requisitos para la ejecución
	-Casos de Prueba: 
		Deben estar creados en una herramienta de gestión de casos de prueba
		Deben tener al menos la trazabilidad de escenario(scripts de prueba)
		Debe indicarse donde estan almacenados las herramientas de gestión de pruebas(ruta)
		Los casos de prueba deben de tener un visto bueno de un experto de negocios y con el scrpit a detalle suficiente para la resuabilidad
	-Datos de Prueba
		Para ejecutar los casos de pruebas de requieren datos estáticos y dinámicos
		Hay que generalos
		Los datos estaticos los crea el diseñador de la prueba y los dinámicos el área de ambientes
		Los datos tienen que estar visibles en el AUT (aplicativo bajo prueba) o en la base de datos
		Los datos no pueden ser copias productivas, enmascarar los datos sensibles
	-Ventana funcional
		El area de ambientes, es responsable de cuidar el choque o la correlación de pruebas, es decir, 
		que una prueba no tome los datos de otra prueba o altere los resultados de esta
		Se implementa la administracion de ventanas de prueba funcional
		Para una ventana funcional debes de tener un checklist cumplido con los siguiente:
			1. Casos de prueba listos
			2. Datos generados
			3. Plan de ejecución 
			4. Aplicativo AUT instalado
	-Plan de Ejecución
		Es el plan a seguir por los ejecutores de prueba para determinar quien y cuando incian y terminan su prueba
		Es comun que se utilice cuando hay 3 o mas ejecutores 
		Lo debe de generar el líder de prueba
		Cambia cada ciclo de prueba
		Se puede elaborar en MS o Excel
		-¿Qué es y qué contiene?
			Secuencia de ciclos de prueba
			Secuencia de casos de prueba 
			Responsable de ejecutar los casos de prueba
			Responsable de casos de prueba (TestWare)
			Repositorio de evidencias: pasados, fallados
			Centro de métricos 
			Mecanimos y modelo de administracion de defectos
			Estatus de casos de prueba
			Estatus de defectos de pruebas
	-AUT (Aplicativo bajo prueba)
		Es el aplicativo o producto de software que vas a validar con los casos de prueba previamente
		diseñados y asignados a ti como ejecutor de pruebas
		Tiene que estar instalado en un ambiente de pruebas o QA
		Debe instalarlo el responsable de ambiente de pruebas
		Debes recibir la ruta para acceder a este aplicativo así como los usuarios y passwords
   -Roles y Resposabilidades
	-Ejecutor de pruebas:
		Ejecuta la prueba siguiendo el script de prueba
		Puede utilizar donde esten documentados los test cases
		Debe conococer el negocio de lo	que va a probar
	-Ingeniero de pruebas:
		Conoce el negocio
		Diseña especificaciones y casos de pruebas
		Diseña procedimientos/scripts de pruebas manuales
	-Líder de pruebas:
		Conoce el negocio adecuadamente
		Define el esfuerzo de horas
		Determina el equipo de trabajo (testers, ejecutores)
		Diseña las estrategias y el plan de pruebas
		Monitorea el desempeño e indicadores de la prueba
		Puede suspender y reanudar la prueba
		Cierra la prueba y genera el certificado de liberación a producción
	-Líder no funcional:
		Conoce el negocio a un nivel de abstraccion muy alto
		Define el esfuerzo de horas 
		Determina el equipo de trabajo 
		Diseña estrategias y plan de pruebas no funcionales
		Monitorea el desempeño e indicadores de la prueba no funcional
		Puede suspender o reanudar la prueba no funcional
		Consigue la aprobacion de PRE-PRODUCCION 
		Cierra la prueba no funcional y genera su parte de certificado de la liberacion de la parte no funcional
	-Ingeniero de desempeño:
		Interpreta las necesidades cuantitativas de las calidad del proyecto y plan de prueba no funcional
		Diseña los escenarios no funcionales
		Diseña y construyo los scripts de prueba no funconales
		Ejecuta los escenarios diseñados
		Obtiene las métricas y las interpreta
	-Líder de Automatización:
		Conoce el negocio
		Conoce arquitecturas de automatización
		Implementa framewokrks
		Define el esfuerzo de horas
		Determina el equipo de trabajo
		Diseña estrategias y plan de pruebas automatizadas
		Monitorea el desempeño e indicadores de la prueba automatizada
	-Ingeniero de Automatización:
		Conoce el negocio
		Diseña scripts de automatización
		Ejecuta scrpits de automatización 
		Conoce frameworks
	-Líder de Ambiente:
		Definel la arquitectura de prueba
		Da seguimiento a las necesidades del area
		Monitorea el desempeño del area y ambiente de prueba
		Definel la periodicidad de actualización de datos y scrambling
	-Dispatcher:
		Recibe las solicitus de ambiente de prueba
		Las canaliza a los resultores especificos
		Monitorea el desempeño de la solicitud
		Y la ateción a esta
	-Ingeniero de datos o Resolutor:
		Recibe las solicitudes de ambiente de prueba asignadas por el dispatcher 
		Las atiende dando respuesta y atención, ya sea de datos, usuarios, soporte o accesos
	-Desarrollador de software:
		Ingeniero que desarrolla el código relacionado con el producto de software que está probando 
		Responsable de corregir los defectos
		Conoce las reglas de negocio y estructuras internas del sistema
	-Matriz de Escalamiento:
		Tester -> Ingenería de Prueba:                -> Test Manager -> Director de QA -> Dirección General                     
				1. Líder de prueba                      
				2. Líder de Ambiente 
				3. Líder de PNT
				4. Líder de automatización
Capítulo 4 - HERRAMIENTAS PARA LA EJECUCIÓN
	Organización de pruebas en herramientas ALM
		Herramientas de gestion de pruebas
		>¿Para qué se utiliza? 
		Para automatizar los procesos de prueba y ayuda a gestionar todos los procedimientos
		para asegurar la calidad como: Testware, defectos, indicadores y requerimientos

		Organizacion de pruebas en herramientas ALM
		Requisitos: debemos revisar las herramienta a adquirir, como los siguientes modulos:
		Requirements: adminsitra los requerimientos del proyecto, procesos de negocios y aplicativos 
		Test Plan: se administra todos los casos de prueba, se diseñan
		Test Lab: administra la ejecucion de casos de prueba, construyes un plan de ejecución
		Defects: administra los defectos detectados durante la prueba, configura cislo de vida del defecto
		Dashboard: administra los indicadores requeridos para la toma de decisiones en tiempo real y para los entregables de calidad
		TestWare incluye los modulos Requiremets, TestPlan y TestLab
		Reusabilidad incluye los modulos Requirements y TestPlan
		Métricas incluye los modulos TestLab y Defects
	
	Evidencia de pruebas
		Herramientas para grabar evidencias de pruebas
		Existen diferentes tipos de herramientas para grabar evidencia
		Grabar videos, Grabar pantallas a foto (JPG, PNG)
		Ejemplo de esto: getgreenshot 

	Administracion de defectos
		Administracion de defectos 
		Una parte importante es:
		Mantener es decir registrar defectos, documentar evidencias, ciclo de vida de un defecto, roles, indicadores
		es util para la toma de decision
		Herramientas: tCOne Compuware, TFS, TestLink, HP
	

	Administracion de ambiente
		Administracion de ambiente
		Lo importante en la administracion de ambiente es mantener:
		Datos, Diagrama de base de datos, diagrama de servidores, diagrama de aplicativos por servidos, batch